class Solution {
    public int largestRectangleArea(int[] arr) {
        int n=arr.length;
        int max=0,ans=0;
        Stack<Integer> stack= new Stack<>();
        Stack<Integer> stack2= new Stack<>();
        int nsel[]=new int[n];
        int nser[]=new int[n];
        for(int i=0;i<n;i++){
            while(!stack.isEmpty()&&arr[stack.peek()]>=arr[i]){
                stack.pop();
            }
            if(stack.isEmpty()){
                nsel[i]=-1;
            }
            else{
                nsel[i]=stack.peek();   
            }
            stack.push(i);
        }


        for(int i=n-1;i>=0;i--){
            while(!stack2.isEmpty()&&arr[stack2.peek()]>=arr[i]){
                stack2.pop();
            }
            if(stack2.isEmpty()){
                nser[i]=n;
            }
            else{
                nser[i]=stack2.peek();
            }
            stack2.push(i);
        }


        for(int i=0;i<n;i++){
           { max=(nser[i]-nsel[i]-1)*arr[i];
            ans=Math.max(ans,max);}
        }
        return ans;
    }
}